{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","MyStyle","setmyStyle","state","setstate","classNameName","style","className","id","type","onClick","Navbar","props","mode","to","Title","about","class","Toggle","for","Enablemode","TextForm","text","settext","heading","value","onChange","e","target","rows","placeholder","Text","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","arr","i","length","charAt","slice","trim","Alert","alert","role","msg","defaultProps","App","setmode","setEnablemode","setalert","Showalert","message","setTimeout","body","path","showalert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.55d9affa.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const [MyStyle, setmyStyle] = useState({\r\n        color:'white',\r\n        backgroundColor:'black'\r\n    })\r\n    const [state, setstate] = useState(\"Enable Dark mode\")\r\n\r\n    function Toggle()\r\n    {\r\n        if(MyStyle.color==='white'){\r\n            setmyStyle({\r\n                color:'black',\r\n            backgroundColor:'white'\r\n            })\r\n            setstate(\"Enable Dark mode\");\r\n        }\r\n        \r\n        else\r\n        {\r\n            setmyStyle({color:'white',\r\n        backgroundColor:'black'})\r\n        setstate(\"Enable White mode\")\r\n    }\r\n    }\r\n  \r\n    return (\r\n        <div classNameName=\"container\" style={MyStyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={MyStyle}>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={MyStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            Accordion Item #1\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={MyStyle}>\r\n                            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={MyStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            Accordion Item #2\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={MyStyle}>\r\n                            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={MyStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            Accordion Item #3\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={MyStyle}>\r\n                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={Toggle} type=\"button\" className=\"btn btn-primary mt-2\">{state}</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link ,BrowserRouter as Router} from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.Title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n              </li>\r\n            </ul>\r\n            {/*<form className=\"d-flex\">\r\n              <input classNameName=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className =\"btn btn-success\" type =\"submit\">Search</button>\r\n            </form>*/}\r\n            <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input class=\"form-check-input\" onClick={props.Toggle} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n              <label class =\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.Enablemode}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  Title: PropTypes.string,\r\n  about: PropTypes.string\r\n}\r\nNavbar.defaultProps = {\r\n  Title: \"Set Title Here\",\r\n  about: \"Set About here\"\r\n}","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    \r\n\r\n    function HandleOnChange(e) {\r\n        settext(e.target.value);\r\n    }\r\n    function UpperCasecnvrt() {\r\n        var Text = text.toUpperCase();\r\n        settext(Text);\r\n    }\r\n    function LowerCasecnvrt() {\r\n        var Text = text.toLowerCase()\r\n        settext(Text);\r\n    }\r\n    function Clearcnvrt() {\r\n        var Text = \"\";\r\n        settext(Text);\r\n    }\r\n    function handlecopy() {\r\n        var Text = document.getElementById('myBox');\r\n        Text.select();\r\n        navigator.clipboard.writeText(Text.value);\r\n        \r\n    }\r\n\r\n    function Removespaces() {\r\n        var Text = text.split(/[ ]+/);\r\n        settext(Text.join(\" \"));\r\n    }\r\n\r\n    function Capitalize_each_word() {\r\n        const str = text\r\n        const arr = str.split(\" \");\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n        \r\n        settext(arr.join(\" \"));\r\n    }\r\n\r\n    const [text, settext] = useState(\"\");\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"container\" >\r\n                <div className=\"mb-3\">\r\n                    <h2 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h2>\r\n                    <textarea value={text} style={{backgroundColor:props.mode==='light'?'white':'#273d50',color:props.mode==='light'?'black':'white'}} onChange={HandleOnChange} className=\"form-control\" id=\"myBox\" rows=\"8\" placeholder=\"Enter Text Here...\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={UpperCasecnvrt}>Convert Into Uppercase</button>\r\n                <button className=\"btn btn-success mx-1\" onClick={LowerCasecnvrt}>Convert Into Lowercase</button>\r\n                <button className=\"btn btn-info mx-1\" onClick={handlecopy}>Copy Text</button>\r\n                <button type=\"button\" class=\"btn btn-dark mx-1\" onClick={Removespaces}>Remove Extra Spaces</button>\r\n                <button type=\"button\" class=\"btn btn-primary mx-1\" onClick={Capitalize_each_word}>Capitalize Each Word</button>\r\n                <button className=\"btn btn-warning\" onClick={Clearcnvrt}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n                <h2>Text Summary</h2>\r\n                <p>{text.length>0 ? text.trim().split(\" \").length : 0} Words || {text.length} Characters || {text.split(\"\\n\").length - 1} Line</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter Something in TextArea to Preview\"}</p>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.type} : </strong>{props.alert.msg} \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode,setmode] = useState('light');\n  const [Enablemode,setEnablemode] = useState('Disabled Dark Mode');\n  const [alert, setalert] = useState(null);\n\n  const Showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  }\n  \n  const Toggle=()=>{\n    if(mode==='light')\n    {\n      setmode('dark');\n      document.body.style.backgroundColor='#273d50';\n      setEnablemode(\"Enable Dark Mode\");\n      Showalert(\"Dark Mode has been Enabled\",\"Success\")\n    }\n    else\n    {\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      setEnablemode(\"Disable Dark Mode\");\n      Showalert(\"Light Mode has been Enabled\",\"Success\");\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar Title=\"Navbar\" about=\"About\" mode={mode} Toggle={Toggle} Enablemode={Enablemode}/>\n    <div className=\"container my-3\">\n    <Alert alert={alert}/>\n    \n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n          <TextForm showalert={()=>Showalert()} heading=\"Enter to Analayse Below\" mode={mode}/>\n          </Route>\n        </Switch>\n        </div>\n    </Router>\n    \n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}